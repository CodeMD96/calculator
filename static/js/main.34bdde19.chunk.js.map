{"version":3,"sources":["components/CalcButtons.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["CalcButtons","buttons","buttonHandler","map","item","index","onClick","App","useState","sum","setSum","className","val","joinedSum","join","newSum","evaluate","storedSum","shift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQASeA,EARK,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,cAAZ,OAChB,8BACKD,EAAQE,KAAI,SAACC,EAAMC,GAAP,OACT,wBAAoBD,KAAMA,EAAME,QAAS,kBAAMJ,EAAcE,IAA7D,SAAsEA,GAAzDC,SCkCVE,MA/Bf,WACE,MAAsBC,mBAAS,CAAC,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KAmBA,OACE,sBAAKC,UAAU,MAAf,UACE,sCACA,sBAAKA,UAAU,cAAf,UACE,4BAAIF,IACL,cAAC,EAAD,CAAaR,QAvBA,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAuBvCC,cArBlB,SAACU,GACnB,GAAY,OAARA,EACFF,EAAO,CAAC,SACH,GAAY,MAARE,EAAa,CACtB,IAAIC,EAAYJ,EAAIK,KAAK,IACrBC,EAASC,YAASH,GACtBH,EAAO,CAACK,QACH,CACL,IAAIE,EAAS,sBAAOR,GAAP,CAAYG,IACJ,IAAjBK,EAAU,IACZA,EAAUC,QAEZR,EAAOO,cCXAE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.34bdde19.chunk.js","sourcesContent":["\r\nconst CalcButtons = ({ buttons, buttonHandler }) => (\r\n    <div>\r\n        {buttons.map((item, index) => (\r\n            <button key={index} item={item} onClick={() => buttonHandler(item)} >{item}</button>\r\n        ))}\r\n    </div>\r\n)\r\n\r\nexport default CalcButtons","import './App.css';\nimport { useState} from \"react\";\nimport { evaluate } from \"mathjs\"\nimport CalcButtons from \"./components/CalcButtons\"\n\n//look into grid for the buttons\n\nfunction App() {\n  const [sum, setSum] = useState([0])\n  let calcButtons = [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"+\",\"-\",\"*\",\"/\",\"=\",\"AC\"]\n\n  const buttonHandler = (val) => {\n      if (val === \"AC\") {\n        setSum([0])\n      } else if (val === \"=\") {\n        let joinedSum = sum.join(\"\")\n        let newSum = evaluate(joinedSum)\n        setSum([newSum])\n      } else {\n        let storedSum = [...sum, val]\n        if (storedSum[0] === 0) {\n          storedSum.shift()\n        }\n        setSum(storedSum)\n      }\n  }\n\n  return(\n    <div className=\"App\">\n      <h1>Calc</h1>\n      <div className=\"calcWrapper\">\n        <p>{sum}</p>\n       <CalcButtons buttons={calcButtons} buttonHandler={buttonHandler} />\n      </div>\n    </div>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}